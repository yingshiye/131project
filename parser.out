Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> structs funcs
Rule 2     program -> funcs
Rule 3     structs -> structs struct
Rule 4     structs -> struct
Rule 5     struct -> STRUCT NAME LBRACE fields RBRACE
Rule 6     fields -> fields field
Rule 7     fields -> field
Rule 8     field -> NAME COLON NAME SEMI
Rule 9     funcs -> funcs func
Rule 10    funcs -> func
Rule 11    func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
Rule 12    func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE
Rule 13    func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
Rule 14    func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE
Rule 15    formal_args -> formal_args COMMA formal_arg
Rule 16    formal_args -> formal_arg
Rule 17    formal_arg -> NAME COLON NAME
Rule 18    formal_arg -> NAME
Rule 19    statements -> statements statement
Rule 20    statements -> statement
Rule 21    statement -> assign SEMI
Rule 22    assign -> variable_w_dot ASSIGN expression
Rule 23    statement -> VAR variable COLON NAME SEMI
Rule 24    statement -> VAR variable SEMI
Rule 25    variable -> NAME
Rule 26    variable_w_dot -> variable_w_dot DOT NAME
Rule 27    variable_w_dot -> NAME
Rule 28    statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 29    statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 30    statement -> TRY LBRACE statements RBRACE catchers
Rule 31    catchers -> catchers catch
Rule 32    catchers -> catch
Rule 33    catch -> CATCH STRING LBRACE statements RBRACE
Rule 34    statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
Rule 35    statement -> RAISE expression SEMI
Rule 36    statement -> expression SEMI
Rule 37    statement -> RETURN expression SEMI
Rule 38    statement -> RETURN SEMI
Rule 39    expression -> NOT expression
Rule 40    expression -> MINUS expression
Rule 41    expression -> NEW NAME
Rule 42    expression -> expression EQ expression
Rule 43    expression -> expression GREATER expression
Rule 44    expression -> expression LESS expression
Rule 45    expression -> expression NOT_EQ expression
Rule 46    expression -> expression GREATER_EQ expression
Rule 47    expression -> expression LESS_EQ expression
Rule 48    expression -> expression PLUS expression
Rule 49    expression -> expression MINUS expression
Rule 50    expression -> expression MULTIPLY expression
Rule 51    expression -> expression DIVIDE expression
Rule 52    expression -> LPAREN expression RPAREN
Rule 53    expression -> expression OR expression
Rule 54    expression -> expression AND expression
Rule 55    expression -> NUMBER
Rule 56    expression -> TRUE
Rule 57    expression -> FALSE
Rule 58    expression -> NIL
Rule 59    expression -> STRING
Rule 60    expression -> variable_w_dot
Rule 61    expression -> NAME LPAREN args RPAREN
Rule 62    expression -> NAME LPAREN RPAREN
Rule 63    args -> args COMMA expression
Rule 64    args -> expression

Terminals, with rules where they appear

AND                  : 54
ASSIGN               : 22
CATCH                : 33
COLON                : 8 11 12 17 23
COMMA                : 15 63
DIVIDE               : 51
DOT                  : 26
ELSE                 : 29
EQ                   : 42
FALSE                : 57
FOR                  : 34
FUNC                 : 11 12 13 14
GREATER              : 43
GREATER_EQ           : 46
IF                   : 28 29
LBRACE               : 5 11 12 13 14 28 29 29 30 33 34
LESS                 : 44
LESS_EQ              : 47
LPAREN               : 11 12 13 14 28 29 34 52 61 62
MINUS                : 40 49
MULTIPLY             : 50
NAME                 : 5 8 8 11 11 12 12 13 14 17 17 18 23 25 26 27 41 61 62
NEW                  : 41
NIL                  : 58
NOT                  : 39
NOT_EQ               : 45
NUMBER               : 55
OR                   : 53
PLUS                 : 48
RAISE                : 35
RBRACE               : 5 11 12 13 14 28 29 29 30 33 34
RETURN               : 37 38
RPAREN               : 11 12 13 14 28 29 34 52 61 62
SEMI                 : 8 21 23 24 34 34 35 36 37 38
STRING               : 33 59
STRUCT               : 5
TRUE                 : 56
TRY                  : 30
VAR                  : 23 24
error                : 

Nonterminals, with rules where they appear

args                 : 61 63
assign               : 21 34 34
catch                : 31 32
catchers             : 30 31
expression           : 22 28 29 34 35 36 37 39 40 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 53 53 54 54 63 64
field                : 6 7
fields               : 5 6
formal_arg           : 15 16
formal_args          : 11 13 15
func                 : 9 10
funcs                : 1 2 9
program              : 0
statement            : 19 20
statements           : 11 12 13 14 19 28 29 29 30 33 34
struct               : 3 4
structs              : 1 3
variable             : 23 24
variable_w_dot       : 22 26 60

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . structs funcs
    (2) program -> . funcs
    (3) structs -> . structs struct
    (4) structs -> . struct
    (9) funcs -> . funcs func
    (10) funcs -> . func
    (5) struct -> . STRUCT NAME LBRACE fields RBRACE
    (11) func -> . FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> . FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> . FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (14) func -> . FUNC NAME LPAREN RPAREN LBRACE statements RBRACE

    STRUCT          shift and go to state 6
    FUNC            shift and go to state 7

    program                        shift and go to state 1
    structs                        shift and go to state 2
    funcs                          shift and go to state 3
    struct                         shift and go to state 4
    func                           shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> structs . funcs
    (3) structs -> structs . struct
    (9) funcs -> . funcs func
    (10) funcs -> . func
    (5) struct -> . STRUCT NAME LBRACE fields RBRACE
    (11) func -> . FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> . FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> . FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (14) func -> . FUNC NAME LPAREN RPAREN LBRACE statements RBRACE

    STRUCT          shift and go to state 6
    FUNC            shift and go to state 7

    funcs                          shift and go to state 8
    struct                         shift and go to state 9
    func                           shift and go to state 5

state 3

    (2) program -> funcs .
    (9) funcs -> funcs . func
    (11) func -> . FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> . FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> . FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (14) func -> . FUNC NAME LPAREN RPAREN LBRACE statements RBRACE

    $end            reduce using rule 2 (program -> funcs .)
    FUNC            shift and go to state 7

    func                           shift and go to state 10

state 4

    (4) structs -> struct .

    STRUCT          reduce using rule 4 (structs -> struct .)
    FUNC            reduce using rule 4 (structs -> struct .)


state 5

    (10) funcs -> func .

    FUNC            reduce using rule 10 (funcs -> func .)
    $end            reduce using rule 10 (funcs -> func .)


state 6

    (5) struct -> STRUCT . NAME LBRACE fields RBRACE

    NAME            shift and go to state 11


state 7

    (11) func -> FUNC . NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> FUNC . NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> FUNC . NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (14) func -> FUNC . NAME LPAREN RPAREN LBRACE statements RBRACE

    NAME            shift and go to state 12


state 8

    (1) program -> structs funcs .
    (9) funcs -> funcs . func
    (11) func -> . FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> . FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> . FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE
    (14) func -> . FUNC NAME LPAREN RPAREN LBRACE statements RBRACE

    $end            reduce using rule 1 (program -> structs funcs .)
    FUNC            shift and go to state 7

    func                           shift and go to state 10

state 9

    (3) structs -> structs struct .

    STRUCT          reduce using rule 3 (structs -> structs struct .)
    FUNC            reduce using rule 3 (structs -> structs struct .)


state 10

    (9) funcs -> funcs func .

    FUNC            reduce using rule 9 (funcs -> funcs func .)
    $end            reduce using rule 9 (funcs -> funcs func .)


state 11

    (5) struct -> STRUCT NAME . LBRACE fields RBRACE

    LBRACE          shift and go to state 13


state 12

    (11) func -> FUNC NAME . LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> FUNC NAME . LPAREN RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> FUNC NAME . LPAREN formal_args RPAREN LBRACE statements RBRACE
    (14) func -> FUNC NAME . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 14


state 13

    (5) struct -> STRUCT NAME LBRACE . fields RBRACE
    (6) fields -> . fields field
    (7) fields -> . field
    (8) field -> . NAME COLON NAME SEMI

    NAME            shift and go to state 15

    fields                         shift and go to state 16
    field                          shift and go to state 17

state 14

    (11) func -> FUNC NAME LPAREN . formal_args RPAREN COLON NAME LBRACE statements RBRACE
    (12) func -> FUNC NAME LPAREN . RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> FUNC NAME LPAREN . formal_args RPAREN LBRACE statements RBRACE
    (14) func -> FUNC NAME LPAREN . RPAREN LBRACE statements RBRACE
    (15) formal_args -> . formal_args COMMA formal_arg
    (16) formal_args -> . formal_arg
    (17) formal_arg -> . NAME COLON NAME
    (18) formal_arg -> . NAME

    RPAREN          shift and go to state 20
    NAME            shift and go to state 18

    formal_args                    shift and go to state 19
    formal_arg                     shift and go to state 21

state 15

    (8) field -> NAME . COLON NAME SEMI

    COLON           shift and go to state 22


state 16

    (5) struct -> STRUCT NAME LBRACE fields . RBRACE
    (6) fields -> fields . field
    (8) field -> . NAME COLON NAME SEMI

    RBRACE          shift and go to state 23
    NAME            shift and go to state 15

    field                          shift and go to state 24

state 17

    (7) fields -> field .

    RBRACE          reduce using rule 7 (fields -> field .)
    NAME            reduce using rule 7 (fields -> field .)


state 18

    (17) formal_arg -> NAME . COLON NAME
    (18) formal_arg -> NAME .

    COLON           shift and go to state 25
    RPAREN          reduce using rule 18 (formal_arg -> NAME .)
    COMMA           reduce using rule 18 (formal_arg -> NAME .)


state 19

    (11) func -> FUNC NAME LPAREN formal_args . RPAREN COLON NAME LBRACE statements RBRACE
    (13) func -> FUNC NAME LPAREN formal_args . RPAREN LBRACE statements RBRACE
    (15) formal_args -> formal_args . COMMA formal_arg

    RPAREN          shift and go to state 26
    COMMA           shift and go to state 27


state 20

    (12) func -> FUNC NAME LPAREN RPAREN . COLON NAME LBRACE statements RBRACE
    (14) func -> FUNC NAME LPAREN RPAREN . LBRACE statements RBRACE

    COLON           shift and go to state 28
    LBRACE          shift and go to state 29


state 21

    (16) formal_args -> formal_arg .

    RPAREN          reduce using rule 16 (formal_args -> formal_arg .)
    COMMA           reduce using rule 16 (formal_args -> formal_arg .)


state 22

    (8) field -> NAME COLON . NAME SEMI

    NAME            shift and go to state 30


state 23

    (5) struct -> STRUCT NAME LBRACE fields RBRACE .

    STRUCT          reduce using rule 5 (struct -> STRUCT NAME LBRACE fields RBRACE .)
    FUNC            reduce using rule 5 (struct -> STRUCT NAME LBRACE fields RBRACE .)


state 24

    (6) fields -> fields field .

    RBRACE          reduce using rule 6 (fields -> fields field .)
    NAME            reduce using rule 6 (fields -> fields field .)


state 25

    (17) formal_arg -> NAME COLON . NAME

    NAME            shift and go to state 31


state 26

    (11) func -> FUNC NAME LPAREN formal_args RPAREN . COLON NAME LBRACE statements RBRACE
    (13) func -> FUNC NAME LPAREN formal_args RPAREN . LBRACE statements RBRACE

    COLON           shift and go to state 32
    LBRACE          shift and go to state 33


state 27

    (15) formal_args -> formal_args COMMA . formal_arg
    (17) formal_arg -> . NAME COLON NAME
    (18) formal_arg -> . NAME

    NAME            shift and go to state 18

    formal_arg                     shift and go to state 34

state 28

    (12) func -> FUNC NAME LPAREN RPAREN COLON . NAME LBRACE statements RBRACE

    NAME            shift and go to state 35


state 29

    (14) func -> FUNC NAME LPAREN RPAREN LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statements                     shift and go to state 38
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 30

    (8) field -> NAME COLON NAME . SEMI

    SEMI            shift and go to state 57


state 31

    (17) formal_arg -> NAME COLON NAME .

    RPAREN          reduce using rule 17 (formal_arg -> NAME COLON NAME .)
    COMMA           reduce using rule 17 (formal_arg -> NAME COLON NAME .)


state 32

    (11) func -> FUNC NAME LPAREN formal_args RPAREN COLON . NAME LBRACE statements RBRACE

    NAME            shift and go to state 58


state 33

    (13) func -> FUNC NAME LPAREN formal_args RPAREN LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statements                     shift and go to state 59
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 34

    (15) formal_args -> formal_args COMMA formal_arg .

    RPAREN          reduce using rule 15 (formal_args -> formal_args COMMA formal_arg .)
    COMMA           reduce using rule 15 (formal_args -> formal_args COMMA formal_arg .)


state 35

    (12) func -> FUNC NAME LPAREN RPAREN COLON NAME . LBRACE statements RBRACE

    LBRACE          shift and go to state 60


state 36

    (61) expression -> NAME . LPAREN args RPAREN
    (62) expression -> NAME . LPAREN RPAREN
    (27) variable_w_dot -> NAME .

    LPAREN          shift and go to state 61
    ASSIGN          reduce using rule 27 (variable_w_dot -> NAME .)
    DOT             reduce using rule 27 (variable_w_dot -> NAME .)
    SEMI            reduce using rule 27 (variable_w_dot -> NAME .)
    EQ              reduce using rule 27 (variable_w_dot -> NAME .)
    GREATER         reduce using rule 27 (variable_w_dot -> NAME .)
    LESS            reduce using rule 27 (variable_w_dot -> NAME .)
    NOT_EQ          reduce using rule 27 (variable_w_dot -> NAME .)
    GREATER_EQ      reduce using rule 27 (variable_w_dot -> NAME .)
    LESS_EQ         reduce using rule 27 (variable_w_dot -> NAME .)
    PLUS            reduce using rule 27 (variable_w_dot -> NAME .)
    MINUS           reduce using rule 27 (variable_w_dot -> NAME .)
    MULTIPLY        reduce using rule 27 (variable_w_dot -> NAME .)
    DIVIDE          reduce using rule 27 (variable_w_dot -> NAME .)
    OR              reduce using rule 27 (variable_w_dot -> NAME .)
    AND             reduce using rule 27 (variable_w_dot -> NAME .)
    RPAREN          reduce using rule 27 (variable_w_dot -> NAME .)
    COMMA           reduce using rule 27 (variable_w_dot -> NAME .)


state 37

    (52) expression -> LPAREN . expression RPAREN
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 62
    variable_w_dot                 shift and go to state 63

state 38

    (14) func -> FUNC NAME LPAREN RPAREN LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 64
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statement                      shift and go to state 65
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 39

    (20) statements -> statement .

    RBRACE          reduce using rule 20 (statements -> statement .)
    VAR             reduce using rule 20 (statements -> statement .)
    IF              reduce using rule 20 (statements -> statement .)
    TRY             reduce using rule 20 (statements -> statement .)
    FOR             reduce using rule 20 (statements -> statement .)
    RAISE           reduce using rule 20 (statements -> statement .)
    RETURN          reduce using rule 20 (statements -> statement .)
    NOT             reduce using rule 20 (statements -> statement .)
    MINUS           reduce using rule 20 (statements -> statement .)
    NEW             reduce using rule 20 (statements -> statement .)
    LPAREN          reduce using rule 20 (statements -> statement .)
    NUMBER          reduce using rule 20 (statements -> statement .)
    TRUE            reduce using rule 20 (statements -> statement .)
    FALSE           reduce using rule 20 (statements -> statement .)
    NIL             reduce using rule 20 (statements -> statement .)
    STRING          reduce using rule 20 (statements -> statement .)
    NAME            reduce using rule 20 (statements -> statement .)


state 40

    (21) statement -> assign . SEMI

    SEMI            shift and go to state 66


state 41

    (23) statement -> VAR . variable COLON NAME SEMI
    (24) statement -> VAR . variable SEMI
    (25) variable -> . NAME

    NAME            shift and go to state 68

    variable                       shift and go to state 67

state 42

    (28) statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 69


state 43

    (36) statement -> expression . SEMI
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            shift and go to state 70
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 44

    (30) statement -> TRY . LBRACE statements RBRACE catchers

    LBRACE          shift and go to state 83


state 45

    (34) statement -> FOR . LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 84


state 46

    (35) statement -> RAISE . expression SEMI
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 85
    variable_w_dot                 shift and go to state 63

state 47

    (37) statement -> RETURN . expression SEMI
    (38) statement -> RETURN . SEMI
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    SEMI            shift and go to state 87
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 86
    variable_w_dot                 shift and go to state 63

state 48

    (22) assign -> variable_w_dot . ASSIGN expression
    (60) expression -> variable_w_dot .
    (26) variable_w_dot -> variable_w_dot . DOT NAME

    ASSIGN          shift and go to state 88
    SEMI            reduce using rule 60 (expression -> variable_w_dot .)
    EQ              reduce using rule 60 (expression -> variable_w_dot .)
    GREATER         reduce using rule 60 (expression -> variable_w_dot .)
    LESS            reduce using rule 60 (expression -> variable_w_dot .)
    NOT_EQ          reduce using rule 60 (expression -> variable_w_dot .)
    GREATER_EQ      reduce using rule 60 (expression -> variable_w_dot .)
    LESS_EQ         reduce using rule 60 (expression -> variable_w_dot .)
    PLUS            reduce using rule 60 (expression -> variable_w_dot .)
    MINUS           reduce using rule 60 (expression -> variable_w_dot .)
    MULTIPLY        reduce using rule 60 (expression -> variable_w_dot .)
    DIVIDE          reduce using rule 60 (expression -> variable_w_dot .)
    OR              reduce using rule 60 (expression -> variable_w_dot .)
    AND             reduce using rule 60 (expression -> variable_w_dot .)
    DOT             shift and go to state 89


state 49

    (39) expression -> NOT . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 90
    variable_w_dot                 shift and go to state 63

state 50

    (40) expression -> MINUS . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 91
    variable_w_dot                 shift and go to state 63

state 51

    (41) expression -> NEW . NAME

    NAME            shift and go to state 92


state 52

    (55) expression -> NUMBER .

    SEMI            reduce using rule 55 (expression -> NUMBER .)
    EQ              reduce using rule 55 (expression -> NUMBER .)
    GREATER         reduce using rule 55 (expression -> NUMBER .)
    LESS            reduce using rule 55 (expression -> NUMBER .)
    NOT_EQ          reduce using rule 55 (expression -> NUMBER .)
    GREATER_EQ      reduce using rule 55 (expression -> NUMBER .)
    LESS_EQ         reduce using rule 55 (expression -> NUMBER .)
    PLUS            reduce using rule 55 (expression -> NUMBER .)
    MINUS           reduce using rule 55 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 55 (expression -> NUMBER .)
    DIVIDE          reduce using rule 55 (expression -> NUMBER .)
    OR              reduce using rule 55 (expression -> NUMBER .)
    AND             reduce using rule 55 (expression -> NUMBER .)
    RPAREN          reduce using rule 55 (expression -> NUMBER .)
    COMMA           reduce using rule 55 (expression -> NUMBER .)


state 53

    (56) expression -> TRUE .

    SEMI            reduce using rule 56 (expression -> TRUE .)
    EQ              reduce using rule 56 (expression -> TRUE .)
    GREATER         reduce using rule 56 (expression -> TRUE .)
    LESS            reduce using rule 56 (expression -> TRUE .)
    NOT_EQ          reduce using rule 56 (expression -> TRUE .)
    GREATER_EQ      reduce using rule 56 (expression -> TRUE .)
    LESS_EQ         reduce using rule 56 (expression -> TRUE .)
    PLUS            reduce using rule 56 (expression -> TRUE .)
    MINUS           reduce using rule 56 (expression -> TRUE .)
    MULTIPLY        reduce using rule 56 (expression -> TRUE .)
    DIVIDE          reduce using rule 56 (expression -> TRUE .)
    OR              reduce using rule 56 (expression -> TRUE .)
    AND             reduce using rule 56 (expression -> TRUE .)
    RPAREN          reduce using rule 56 (expression -> TRUE .)
    COMMA           reduce using rule 56 (expression -> TRUE .)


state 54

    (57) expression -> FALSE .

    SEMI            reduce using rule 57 (expression -> FALSE .)
    EQ              reduce using rule 57 (expression -> FALSE .)
    GREATER         reduce using rule 57 (expression -> FALSE .)
    LESS            reduce using rule 57 (expression -> FALSE .)
    NOT_EQ          reduce using rule 57 (expression -> FALSE .)
    GREATER_EQ      reduce using rule 57 (expression -> FALSE .)
    LESS_EQ         reduce using rule 57 (expression -> FALSE .)
    PLUS            reduce using rule 57 (expression -> FALSE .)
    MINUS           reduce using rule 57 (expression -> FALSE .)
    MULTIPLY        reduce using rule 57 (expression -> FALSE .)
    DIVIDE          reduce using rule 57 (expression -> FALSE .)
    OR              reduce using rule 57 (expression -> FALSE .)
    AND             reduce using rule 57 (expression -> FALSE .)
    RPAREN          reduce using rule 57 (expression -> FALSE .)
    COMMA           reduce using rule 57 (expression -> FALSE .)


state 55

    (58) expression -> NIL .

    SEMI            reduce using rule 58 (expression -> NIL .)
    EQ              reduce using rule 58 (expression -> NIL .)
    GREATER         reduce using rule 58 (expression -> NIL .)
    LESS            reduce using rule 58 (expression -> NIL .)
    NOT_EQ          reduce using rule 58 (expression -> NIL .)
    GREATER_EQ      reduce using rule 58 (expression -> NIL .)
    LESS_EQ         reduce using rule 58 (expression -> NIL .)
    PLUS            reduce using rule 58 (expression -> NIL .)
    MINUS           reduce using rule 58 (expression -> NIL .)
    MULTIPLY        reduce using rule 58 (expression -> NIL .)
    DIVIDE          reduce using rule 58 (expression -> NIL .)
    OR              reduce using rule 58 (expression -> NIL .)
    AND             reduce using rule 58 (expression -> NIL .)
    RPAREN          reduce using rule 58 (expression -> NIL .)
    COMMA           reduce using rule 58 (expression -> NIL .)


state 56

    (59) expression -> STRING .

    SEMI            reduce using rule 59 (expression -> STRING .)
    EQ              reduce using rule 59 (expression -> STRING .)
    GREATER         reduce using rule 59 (expression -> STRING .)
    LESS            reduce using rule 59 (expression -> STRING .)
    NOT_EQ          reduce using rule 59 (expression -> STRING .)
    GREATER_EQ      reduce using rule 59 (expression -> STRING .)
    LESS_EQ         reduce using rule 59 (expression -> STRING .)
    PLUS            reduce using rule 59 (expression -> STRING .)
    MINUS           reduce using rule 59 (expression -> STRING .)
    MULTIPLY        reduce using rule 59 (expression -> STRING .)
    DIVIDE          reduce using rule 59 (expression -> STRING .)
    OR              reduce using rule 59 (expression -> STRING .)
    AND             reduce using rule 59 (expression -> STRING .)
    RPAREN          reduce using rule 59 (expression -> STRING .)
    COMMA           reduce using rule 59 (expression -> STRING .)


state 57

    (8) field -> NAME COLON NAME SEMI .

    RBRACE          reduce using rule 8 (field -> NAME COLON NAME SEMI .)
    NAME            reduce using rule 8 (field -> NAME COLON NAME SEMI .)


state 58

    (11) func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME . LBRACE statements RBRACE

    LBRACE          shift and go to state 93


state 59

    (13) func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 94
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statement                      shift and go to state 65
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 60

    (12) func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statements                     shift and go to state 95
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 61

    (61) expression -> NAME LPAREN . args RPAREN
    (62) expression -> NAME LPAREN . RPAREN
    (63) args -> . args COMMA expression
    (64) args -> . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RPAREN          shift and go to state 97
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    args                           shift and go to state 96
    expression                     shift and go to state 98
    variable_w_dot                 shift and go to state 63

state 62

    (52) expression -> LPAREN expression . RPAREN
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    RPAREN          shift and go to state 99
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 63

    (60) expression -> variable_w_dot .
    (26) variable_w_dot -> variable_w_dot . DOT NAME

    RPAREN          reduce using rule 60 (expression -> variable_w_dot .)
    EQ              reduce using rule 60 (expression -> variable_w_dot .)
    GREATER         reduce using rule 60 (expression -> variable_w_dot .)
    LESS            reduce using rule 60 (expression -> variable_w_dot .)
    NOT_EQ          reduce using rule 60 (expression -> variable_w_dot .)
    GREATER_EQ      reduce using rule 60 (expression -> variable_w_dot .)
    LESS_EQ         reduce using rule 60 (expression -> variable_w_dot .)
    PLUS            reduce using rule 60 (expression -> variable_w_dot .)
    MINUS           reduce using rule 60 (expression -> variable_w_dot .)
    MULTIPLY        reduce using rule 60 (expression -> variable_w_dot .)
    DIVIDE          reduce using rule 60 (expression -> variable_w_dot .)
    OR              reduce using rule 60 (expression -> variable_w_dot .)
    AND             reduce using rule 60 (expression -> variable_w_dot .)
    SEMI            reduce using rule 60 (expression -> variable_w_dot .)
    COMMA           reduce using rule 60 (expression -> variable_w_dot .)
    DOT             shift and go to state 89


state 64

    (14) func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE .

    FUNC            reduce using rule 14 (func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 14 (func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE .)


state 65

    (19) statements -> statements statement .

    RBRACE          reduce using rule 19 (statements -> statements statement .)
    VAR             reduce using rule 19 (statements -> statements statement .)
    IF              reduce using rule 19 (statements -> statements statement .)
    TRY             reduce using rule 19 (statements -> statements statement .)
    FOR             reduce using rule 19 (statements -> statements statement .)
    RAISE           reduce using rule 19 (statements -> statements statement .)
    RETURN          reduce using rule 19 (statements -> statements statement .)
    NOT             reduce using rule 19 (statements -> statements statement .)
    MINUS           reduce using rule 19 (statements -> statements statement .)
    NEW             reduce using rule 19 (statements -> statements statement .)
    LPAREN          reduce using rule 19 (statements -> statements statement .)
    NUMBER          reduce using rule 19 (statements -> statements statement .)
    TRUE            reduce using rule 19 (statements -> statements statement .)
    FALSE           reduce using rule 19 (statements -> statements statement .)
    NIL             reduce using rule 19 (statements -> statements statement .)
    STRING          reduce using rule 19 (statements -> statements statement .)
    NAME            reduce using rule 19 (statements -> statements statement .)


state 66

    (21) statement -> assign SEMI .

    RBRACE          reduce using rule 21 (statement -> assign SEMI .)
    VAR             reduce using rule 21 (statement -> assign SEMI .)
    IF              reduce using rule 21 (statement -> assign SEMI .)
    TRY             reduce using rule 21 (statement -> assign SEMI .)
    FOR             reduce using rule 21 (statement -> assign SEMI .)
    RAISE           reduce using rule 21 (statement -> assign SEMI .)
    RETURN          reduce using rule 21 (statement -> assign SEMI .)
    NOT             reduce using rule 21 (statement -> assign SEMI .)
    MINUS           reduce using rule 21 (statement -> assign SEMI .)
    NEW             reduce using rule 21 (statement -> assign SEMI .)
    LPAREN          reduce using rule 21 (statement -> assign SEMI .)
    NUMBER          reduce using rule 21 (statement -> assign SEMI .)
    TRUE            reduce using rule 21 (statement -> assign SEMI .)
    FALSE           reduce using rule 21 (statement -> assign SEMI .)
    NIL             reduce using rule 21 (statement -> assign SEMI .)
    STRING          reduce using rule 21 (statement -> assign SEMI .)
    NAME            reduce using rule 21 (statement -> assign SEMI .)


state 67

    (23) statement -> VAR variable . COLON NAME SEMI
    (24) statement -> VAR variable . SEMI

    COLON           shift and go to state 100
    SEMI            shift and go to state 101


state 68

    (25) variable -> NAME .

    COLON           reduce using rule 25 (variable -> NAME .)
    SEMI            reduce using rule 25 (variable -> NAME .)


state 69

    (28) statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE
    (29) statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 102
    variable_w_dot                 shift and go to state 63

state 70

    (36) statement -> expression SEMI .

    RBRACE          reduce using rule 36 (statement -> expression SEMI .)
    VAR             reduce using rule 36 (statement -> expression SEMI .)
    IF              reduce using rule 36 (statement -> expression SEMI .)
    TRY             reduce using rule 36 (statement -> expression SEMI .)
    FOR             reduce using rule 36 (statement -> expression SEMI .)
    RAISE           reduce using rule 36 (statement -> expression SEMI .)
    RETURN          reduce using rule 36 (statement -> expression SEMI .)
    NOT             reduce using rule 36 (statement -> expression SEMI .)
    MINUS           reduce using rule 36 (statement -> expression SEMI .)
    NEW             reduce using rule 36 (statement -> expression SEMI .)
    LPAREN          reduce using rule 36 (statement -> expression SEMI .)
    NUMBER          reduce using rule 36 (statement -> expression SEMI .)
    TRUE            reduce using rule 36 (statement -> expression SEMI .)
    FALSE           reduce using rule 36 (statement -> expression SEMI .)
    NIL             reduce using rule 36 (statement -> expression SEMI .)
    STRING          reduce using rule 36 (statement -> expression SEMI .)
    NAME            reduce using rule 36 (statement -> expression SEMI .)


state 71

    (42) expression -> expression EQ . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 103
    variable_w_dot                 shift and go to state 63

state 72

    (43) expression -> expression GREATER . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 104
    variable_w_dot                 shift and go to state 63

state 73

    (44) expression -> expression LESS . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 105
    variable_w_dot                 shift and go to state 63

state 74

    (45) expression -> expression NOT_EQ . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 106
    variable_w_dot                 shift and go to state 63

state 75

    (46) expression -> expression GREATER_EQ . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 107
    variable_w_dot                 shift and go to state 63

state 76

    (47) expression -> expression LESS_EQ . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 108
    variable_w_dot                 shift and go to state 63

state 77

    (48) expression -> expression PLUS . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 109
    variable_w_dot                 shift and go to state 63

state 78

    (49) expression -> expression MINUS . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 110
    variable_w_dot                 shift and go to state 63

state 79

    (50) expression -> expression MULTIPLY . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 111
    variable_w_dot                 shift and go to state 63

state 80

    (51) expression -> expression DIVIDE . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 112
    variable_w_dot                 shift and go to state 63

state 81

    (53) expression -> expression OR . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 113
    variable_w_dot                 shift and go to state 63

state 82

    (54) expression -> expression AND . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 114
    variable_w_dot                 shift and go to state 63

state 83

    (30) statement -> TRY LBRACE . statements RBRACE catchers
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statements                     shift and go to state 115
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 84

    (34) statement -> FOR LPAREN . assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (22) assign -> . variable_w_dot ASSIGN expression
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NAME            shift and go to state 118

    assign                         shift and go to state 116
    variable_w_dot                 shift and go to state 117

state 85

    (35) statement -> RAISE expression . SEMI
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            shift and go to state 119
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 86

    (37) statement -> RETURN expression . SEMI
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            shift and go to state 120
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 87

    (38) statement -> RETURN SEMI .

    RBRACE          reduce using rule 38 (statement -> RETURN SEMI .)
    VAR             reduce using rule 38 (statement -> RETURN SEMI .)
    IF              reduce using rule 38 (statement -> RETURN SEMI .)
    TRY             reduce using rule 38 (statement -> RETURN SEMI .)
    FOR             reduce using rule 38 (statement -> RETURN SEMI .)
    RAISE           reduce using rule 38 (statement -> RETURN SEMI .)
    RETURN          reduce using rule 38 (statement -> RETURN SEMI .)
    NOT             reduce using rule 38 (statement -> RETURN SEMI .)
    MINUS           reduce using rule 38 (statement -> RETURN SEMI .)
    NEW             reduce using rule 38 (statement -> RETURN SEMI .)
    LPAREN          reduce using rule 38 (statement -> RETURN SEMI .)
    NUMBER          reduce using rule 38 (statement -> RETURN SEMI .)
    TRUE            reduce using rule 38 (statement -> RETURN SEMI .)
    FALSE           reduce using rule 38 (statement -> RETURN SEMI .)
    NIL             reduce using rule 38 (statement -> RETURN SEMI .)
    STRING          reduce using rule 38 (statement -> RETURN SEMI .)
    NAME            reduce using rule 38 (statement -> RETURN SEMI .)


state 88

    (22) assign -> variable_w_dot ASSIGN . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    variable_w_dot                 shift and go to state 63
    expression                     shift and go to state 121

state 89

    (26) variable_w_dot -> variable_w_dot DOT . NAME

    NAME            shift and go to state 122


state 90

    (39) expression -> NOT expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 39 (expression -> NOT expression .)
    EQ              reduce using rule 39 (expression -> NOT expression .)
    GREATER         reduce using rule 39 (expression -> NOT expression .)
    LESS            reduce using rule 39 (expression -> NOT expression .)
    NOT_EQ          reduce using rule 39 (expression -> NOT expression .)
    GREATER_EQ      reduce using rule 39 (expression -> NOT expression .)
    LESS_EQ         reduce using rule 39 (expression -> NOT expression .)
    PLUS            reduce using rule 39 (expression -> NOT expression .)
    MINUS           reduce using rule 39 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 39 (expression -> NOT expression .)
    DIVIDE          reduce using rule 39 (expression -> NOT expression .)
    OR              reduce using rule 39 (expression -> NOT expression .)
    AND             reduce using rule 39 (expression -> NOT expression .)
    RPAREN          reduce using rule 39 (expression -> NOT expression .)
    COMMA           reduce using rule 39 (expression -> NOT expression .)

  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 91

    (40) expression -> MINUS expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 40 (expression -> MINUS expression .)
    EQ              reduce using rule 40 (expression -> MINUS expression .)
    GREATER         reduce using rule 40 (expression -> MINUS expression .)
    LESS            reduce using rule 40 (expression -> MINUS expression .)
    NOT_EQ          reduce using rule 40 (expression -> MINUS expression .)
    GREATER_EQ      reduce using rule 40 (expression -> MINUS expression .)
    LESS_EQ         reduce using rule 40 (expression -> MINUS expression .)
    PLUS            reduce using rule 40 (expression -> MINUS expression .)
    MINUS           reduce using rule 40 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 40 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 40 (expression -> MINUS expression .)
    OR              reduce using rule 40 (expression -> MINUS expression .)
    AND             reduce using rule 40 (expression -> MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> MINUS expression .)
    COMMA           reduce using rule 40 (expression -> MINUS expression .)

  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 92

    (41) expression -> NEW NAME .

    SEMI            reduce using rule 41 (expression -> NEW NAME .)
    EQ              reduce using rule 41 (expression -> NEW NAME .)
    GREATER         reduce using rule 41 (expression -> NEW NAME .)
    LESS            reduce using rule 41 (expression -> NEW NAME .)
    NOT_EQ          reduce using rule 41 (expression -> NEW NAME .)
    GREATER_EQ      reduce using rule 41 (expression -> NEW NAME .)
    LESS_EQ         reduce using rule 41 (expression -> NEW NAME .)
    PLUS            reduce using rule 41 (expression -> NEW NAME .)
    MINUS           reduce using rule 41 (expression -> NEW NAME .)
    MULTIPLY        reduce using rule 41 (expression -> NEW NAME .)
    DIVIDE          reduce using rule 41 (expression -> NEW NAME .)
    OR              reduce using rule 41 (expression -> NEW NAME .)
    AND             reduce using rule 41 (expression -> NEW NAME .)
    RPAREN          reduce using rule 41 (expression -> NEW NAME .)
    COMMA           reduce using rule 41 (expression -> NEW NAME .)


state 93

    (11) func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statements                     shift and go to state 123
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 94

    (13) func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE .

    FUNC            reduce using rule 13 (func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 13 (func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE .)


state 95

    (12) func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 124
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statement                      shift and go to state 65
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 96

    (61) expression -> NAME LPAREN args . RPAREN
    (63) args -> args . COMMA expression

    RPAREN          shift and go to state 125
    COMMA           shift and go to state 126


state 97

    (62) expression -> NAME LPAREN RPAREN .

    SEMI            reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    EQ              reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    GREATER         reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    LESS            reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    NOT_EQ          reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    GREATER_EQ      reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    LESS_EQ         reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    MULTIPLY        reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (expression -> NAME LPAREN RPAREN .)
    COMMA           reduce using rule 62 (expression -> NAME LPAREN RPAREN .)


state 98

    (64) args -> expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    RPAREN          reduce using rule 64 (args -> expression .)
    COMMA           reduce using rule 64 (args -> expression .)
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 99

    (52) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    NOT_EQ          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GREATER_EQ      reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LESS_EQ         reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 52 (expression -> LPAREN expression RPAREN .)


state 100

    (23) statement -> VAR variable COLON . NAME SEMI

    NAME            shift and go to state 127


state 101

    (24) statement -> VAR variable SEMI .

    RBRACE          reduce using rule 24 (statement -> VAR variable SEMI .)
    VAR             reduce using rule 24 (statement -> VAR variable SEMI .)
    IF              reduce using rule 24 (statement -> VAR variable SEMI .)
    TRY             reduce using rule 24 (statement -> VAR variable SEMI .)
    FOR             reduce using rule 24 (statement -> VAR variable SEMI .)
    RAISE           reduce using rule 24 (statement -> VAR variable SEMI .)
    RETURN          reduce using rule 24 (statement -> VAR variable SEMI .)
    NOT             reduce using rule 24 (statement -> VAR variable SEMI .)
    MINUS           reduce using rule 24 (statement -> VAR variable SEMI .)
    NEW             reduce using rule 24 (statement -> VAR variable SEMI .)
    LPAREN          reduce using rule 24 (statement -> VAR variable SEMI .)
    NUMBER          reduce using rule 24 (statement -> VAR variable SEMI .)
    TRUE            reduce using rule 24 (statement -> VAR variable SEMI .)
    FALSE           reduce using rule 24 (statement -> VAR variable SEMI .)
    NIL             reduce using rule 24 (statement -> VAR variable SEMI .)
    STRING          reduce using rule 24 (statement -> VAR variable SEMI .)
    NAME            reduce using rule 24 (statement -> VAR variable SEMI .)


state 102

    (28) statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE
    (29) statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    RPAREN          shift and go to state 128
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 103

    (42) expression -> expression EQ expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 42 (expression -> expression EQ expression .)
    EQ              reduce using rule 42 (expression -> expression EQ expression .)
    GREATER         reduce using rule 42 (expression -> expression EQ expression .)
    LESS            reduce using rule 42 (expression -> expression EQ expression .)
    NOT_EQ          reduce using rule 42 (expression -> expression EQ expression .)
    GREATER_EQ      reduce using rule 42 (expression -> expression EQ expression .)
    LESS_EQ         reduce using rule 42 (expression -> expression EQ expression .)
    OR              reduce using rule 42 (expression -> expression EQ expression .)
    AND             reduce using rule 42 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 42 (expression -> expression EQ expression .)
    COMMA           reduce using rule 42 (expression -> expression EQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 104

    (43) expression -> expression GREATER expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 43 (expression -> expression GREATER expression .)
    EQ              reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 43 (expression -> expression GREATER expression .)
    LESS            reduce using rule 43 (expression -> expression GREATER expression .)
    NOT_EQ          reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER_EQ      reduce using rule 43 (expression -> expression GREATER expression .)
    LESS_EQ         reduce using rule 43 (expression -> expression GREATER expression .)
    OR              reduce using rule 43 (expression -> expression GREATER expression .)
    AND             reduce using rule 43 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 43 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 43 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 105

    (44) expression -> expression LESS expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 44 (expression -> expression LESS expression .)
    EQ              reduce using rule 44 (expression -> expression LESS expression .)
    GREATER         reduce using rule 44 (expression -> expression LESS expression .)
    LESS            reduce using rule 44 (expression -> expression LESS expression .)
    NOT_EQ          reduce using rule 44 (expression -> expression LESS expression .)
    GREATER_EQ      reduce using rule 44 (expression -> expression LESS expression .)
    LESS_EQ         reduce using rule 44 (expression -> expression LESS expression .)
    OR              reduce using rule 44 (expression -> expression LESS expression .)
    AND             reduce using rule 44 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 44 (expression -> expression LESS expression .)
    COMMA           reduce using rule 44 (expression -> expression LESS expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression LESS expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 106

    (45) expression -> expression NOT_EQ expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 45 (expression -> expression NOT_EQ expression .)
    EQ              reduce using rule 45 (expression -> expression NOT_EQ expression .)
    GREATER         reduce using rule 45 (expression -> expression NOT_EQ expression .)
    LESS            reduce using rule 45 (expression -> expression NOT_EQ expression .)
    NOT_EQ          reduce using rule 45 (expression -> expression NOT_EQ expression .)
    GREATER_EQ      reduce using rule 45 (expression -> expression NOT_EQ expression .)
    LESS_EQ         reduce using rule 45 (expression -> expression NOT_EQ expression .)
    OR              reduce using rule 45 (expression -> expression NOT_EQ expression .)
    AND             reduce using rule 45 (expression -> expression NOT_EQ expression .)
    RPAREN          reduce using rule 45 (expression -> expression NOT_EQ expression .)
    COMMA           reduce using rule 45 (expression -> expression NOT_EQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression NOT_EQ expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 107

    (46) expression -> expression GREATER_EQ expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    EQ              reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    GREATER         reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    LESS            reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    NOT_EQ          reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    GREATER_EQ      reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    LESS_EQ         reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    OR              reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    AND             reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    COMMA           reduce using rule 46 (expression -> expression GREATER_EQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 46 (expression -> expression GREATER_EQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression GREATER_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 46 (expression -> expression GREATER_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression GREATER_EQ expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 108

    (47) expression -> expression LESS_EQ expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 47 (expression -> expression LESS_EQ expression .)
    EQ              reduce using rule 47 (expression -> expression LESS_EQ expression .)
    GREATER         reduce using rule 47 (expression -> expression LESS_EQ expression .)
    LESS            reduce using rule 47 (expression -> expression LESS_EQ expression .)
    NOT_EQ          reduce using rule 47 (expression -> expression LESS_EQ expression .)
    GREATER_EQ      reduce using rule 47 (expression -> expression LESS_EQ expression .)
    LESS_EQ         reduce using rule 47 (expression -> expression LESS_EQ expression .)
    OR              reduce using rule 47 (expression -> expression LESS_EQ expression .)
    AND             reduce using rule 47 (expression -> expression LESS_EQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression LESS_EQ expression .)
    COMMA           reduce using rule 47 (expression -> expression LESS_EQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! PLUS            [ reduce using rule 47 (expression -> expression LESS_EQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LESS_EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 47 (expression -> expression LESS_EQ expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LESS_EQ expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 109

    (48) expression -> expression PLUS expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 48 (expression -> expression PLUS expression .)
    EQ              reduce using rule 48 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 48 (expression -> expression PLUS expression .)
    LESS            reduce using rule 48 (expression -> expression PLUS expression .)
    NOT_EQ          reduce using rule 48 (expression -> expression PLUS expression .)
    GREATER_EQ      reduce using rule 48 (expression -> expression PLUS expression .)
    LESS_EQ         reduce using rule 48 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 48 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 48 (expression -> expression PLUS expression .)
    OR              reduce using rule 48 (expression -> expression PLUS expression .)
    AND             reduce using rule 48 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 48 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 48 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! MULTIPLY        [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 110

    (49) expression -> expression MINUS expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 49 (expression -> expression MINUS expression .)
    EQ              reduce using rule 49 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 49 (expression -> expression MINUS expression .)
    LESS            reduce using rule 49 (expression -> expression MINUS expression .)
    NOT_EQ          reduce using rule 49 (expression -> expression MINUS expression .)
    GREATER_EQ      reduce using rule 49 (expression -> expression MINUS expression .)
    LESS_EQ         reduce using rule 49 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 49 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 49 (expression -> expression MINUS expression .)
    OR              reduce using rule 49 (expression -> expression MINUS expression .)
    AND             reduce using rule 49 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 49 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! MULTIPLY        [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 111

    (50) expression -> expression MULTIPLY expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 50 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 50 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 50 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 50 (expression -> expression MULTIPLY expression .)
    NOT_EQ          reduce using rule 50 (expression -> expression MULTIPLY expression .)
    GREATER_EQ      reduce using rule 50 (expression -> expression MULTIPLY expression .)
    LESS_EQ         reduce using rule 50 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 50 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 50 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 50 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 50 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 50 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 50 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 50 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 50 (expression -> expression MULTIPLY expression .)

  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 112

    (51) expression -> expression DIVIDE expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 51 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 51 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 51 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 51 (expression -> expression DIVIDE expression .)
    NOT_EQ          reduce using rule 51 (expression -> expression DIVIDE expression .)
    GREATER_EQ      reduce using rule 51 (expression -> expression DIVIDE expression .)
    LESS_EQ         reduce using rule 51 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 51 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 51 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 51 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 51 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 51 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 51 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 51 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 51 (expression -> expression DIVIDE expression .)

  ! EQ              [ shift and go to state 71 ]
  ! GREATER         [ shift and go to state 72 ]
  ! LESS            [ shift and go to state 73 ]
  ! NOT_EQ          [ shift and go to state 74 ]
  ! GREATER_EQ      [ shift and go to state 75 ]
  ! LESS_EQ         [ shift and go to state 76 ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 113

    (53) expression -> expression OR expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 53 (expression -> expression OR expression .)
    OR              reduce using rule 53 (expression -> expression OR expression .)
    RPAREN          reduce using rule 53 (expression -> expression OR expression .)
    COMMA           reduce using rule 53 (expression -> expression OR expression .)
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    AND             shift and go to state 82

  ! EQ              [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! NOT_EQ          [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! GREATER_EQ      [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! LESS_EQ         [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 81 ]


state 114

    (54) expression -> expression AND expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 54 (expression -> expression AND expression .)
    OR              reduce using rule 54 (expression -> expression AND expression .)
    AND             reduce using rule 54 (expression -> expression AND expression .)
    RPAREN          reduce using rule 54 (expression -> expression AND expression .)
    COMMA           reduce using rule 54 (expression -> expression AND expression .)
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80

  ! EQ              [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! NOT_EQ          [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! GREATER_EQ      [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! LESS_EQ         [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]


state 115

    (30) statement -> TRY LBRACE statements . RBRACE catchers
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 129
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statement                      shift and go to state 65
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 116

    (34) statement -> FOR LPAREN assign . SEMI expression SEMI assign RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 130


state 117

    (22) assign -> variable_w_dot . ASSIGN expression
    (26) variable_w_dot -> variable_w_dot . DOT NAME

    ASSIGN          shift and go to state 88
    DOT             shift and go to state 89


state 118

    (27) variable_w_dot -> NAME .

    ASSIGN          reduce using rule 27 (variable_w_dot -> NAME .)
    DOT             reduce using rule 27 (variable_w_dot -> NAME .)


state 119

    (35) statement -> RAISE expression SEMI .

    RBRACE          reduce using rule 35 (statement -> RAISE expression SEMI .)
    VAR             reduce using rule 35 (statement -> RAISE expression SEMI .)
    IF              reduce using rule 35 (statement -> RAISE expression SEMI .)
    TRY             reduce using rule 35 (statement -> RAISE expression SEMI .)
    FOR             reduce using rule 35 (statement -> RAISE expression SEMI .)
    RAISE           reduce using rule 35 (statement -> RAISE expression SEMI .)
    RETURN          reduce using rule 35 (statement -> RAISE expression SEMI .)
    NOT             reduce using rule 35 (statement -> RAISE expression SEMI .)
    MINUS           reduce using rule 35 (statement -> RAISE expression SEMI .)
    NEW             reduce using rule 35 (statement -> RAISE expression SEMI .)
    LPAREN          reduce using rule 35 (statement -> RAISE expression SEMI .)
    NUMBER          reduce using rule 35 (statement -> RAISE expression SEMI .)
    TRUE            reduce using rule 35 (statement -> RAISE expression SEMI .)
    FALSE           reduce using rule 35 (statement -> RAISE expression SEMI .)
    NIL             reduce using rule 35 (statement -> RAISE expression SEMI .)
    STRING          reduce using rule 35 (statement -> RAISE expression SEMI .)
    NAME            reduce using rule 35 (statement -> RAISE expression SEMI .)


state 120

    (37) statement -> RETURN expression SEMI .

    RBRACE          reduce using rule 37 (statement -> RETURN expression SEMI .)
    VAR             reduce using rule 37 (statement -> RETURN expression SEMI .)
    IF              reduce using rule 37 (statement -> RETURN expression SEMI .)
    TRY             reduce using rule 37 (statement -> RETURN expression SEMI .)
    FOR             reduce using rule 37 (statement -> RETURN expression SEMI .)
    RAISE           reduce using rule 37 (statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 37 (statement -> RETURN expression SEMI .)
    NOT             reduce using rule 37 (statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 37 (statement -> RETURN expression SEMI .)
    NEW             reduce using rule 37 (statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 37 (statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 37 (statement -> RETURN expression SEMI .)
    TRUE            reduce using rule 37 (statement -> RETURN expression SEMI .)
    FALSE           reduce using rule 37 (statement -> RETURN expression SEMI .)
    NIL             reduce using rule 37 (statement -> RETURN expression SEMI .)
    STRING          reduce using rule 37 (statement -> RETURN expression SEMI .)
    NAME            reduce using rule 37 (statement -> RETURN expression SEMI .)


state 121

    (22) assign -> variable_w_dot ASSIGN expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            reduce using rule 22 (assign -> variable_w_dot ASSIGN expression .)
    RPAREN          reduce using rule 22 (assign -> variable_w_dot ASSIGN expression .)
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 122

    (26) variable_w_dot -> variable_w_dot DOT NAME .

    ASSIGN          reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    DOT             reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    SEMI            reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    EQ              reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    GREATER         reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    LESS            reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    NOT_EQ          reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    GREATER_EQ      reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    LESS_EQ         reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    PLUS            reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    MINUS           reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    MULTIPLY        reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    DIVIDE          reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    OR              reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    AND             reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    RPAREN          reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)
    COMMA           reduce using rule 26 (variable_w_dot -> variable_w_dot DOT NAME .)


state 123

    (11) func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 131
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statement                      shift and go to state 65
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 124

    (12) func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE .

    FUNC            reduce using rule 12 (func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE .)
    $end            reduce using rule 12 (func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE .)


state 125

    (61) expression -> NAME LPAREN args RPAREN .

    SEMI            reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    EQ              reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    GREATER         reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    LESS            reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    NOT_EQ          reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    GREATER_EQ      reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    LESS_EQ         reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    PLUS            reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    MINUS           reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    MULTIPLY        reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    DIVIDE          reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    OR              reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    AND             reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    RPAREN          reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)
    COMMA           reduce using rule 61 (expression -> NAME LPAREN args RPAREN .)


state 126

    (63) args -> args COMMA . expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 132
    variable_w_dot                 shift and go to state 63

state 127

    (23) statement -> VAR variable COLON NAME . SEMI

    SEMI            shift and go to state 133


state 128

    (28) statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE
    (29) statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 134


state 129

    (30) statement -> TRY LBRACE statements RBRACE . catchers
    (31) catchers -> . catchers catch
    (32) catchers -> . catch
    (33) catch -> . CATCH STRING LBRACE statements RBRACE

    CATCH           shift and go to state 137

    catchers                       shift and go to state 135
    catch                          shift and go to state 136

state 130

    (34) statement -> FOR LPAREN assign SEMI . expression SEMI assign RPAREN LBRACE statements RBRACE
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 138
    variable_w_dot                 shift and go to state 63

state 131

    (11) func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE .

    FUNC            reduce using rule 11 (func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE .)
    $end            reduce using rule 11 (func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE .)


state 132

    (63) args -> args COMMA expression .
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    RPAREN          reduce using rule 63 (args -> args COMMA expression .)
    COMMA           reduce using rule 63 (args -> args COMMA expression .)
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 133

    (23) statement -> VAR variable COLON NAME SEMI .

    RBRACE          reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    VAR             reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    IF              reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    TRY             reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    FOR             reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    RAISE           reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    RETURN          reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    NOT             reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    MINUS           reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    NEW             reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    LPAREN          reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    NUMBER          reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    TRUE            reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    FALSE           reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    NIL             reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    STRING          reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)
    NAME            reduce using rule 23 (statement -> VAR variable COLON NAME SEMI .)


state 134

    (28) statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE
    (29) statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 43
    statements                     shift and go to state 139
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    variable_w_dot                 shift and go to state 48

state 135

    (30) statement -> TRY LBRACE statements RBRACE catchers .
    (31) catchers -> catchers . catch
    (33) catch -> . CATCH STRING LBRACE statements RBRACE

    RBRACE          reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    VAR             reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    IF              reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    TRY             reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    FOR             reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    RAISE           reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    RETURN          reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    NOT             reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    MINUS           reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    NEW             reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    LPAREN          reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    NUMBER          reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    TRUE            reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    FALSE           reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    NIL             reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    STRING          reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    NAME            reduce using rule 30 (statement -> TRY LBRACE statements RBRACE catchers .)
    CATCH           shift and go to state 137

    catch                          shift and go to state 140

state 136

    (32) catchers -> catch .

    CATCH           reduce using rule 32 (catchers -> catch .)
    RBRACE          reduce using rule 32 (catchers -> catch .)
    VAR             reduce using rule 32 (catchers -> catch .)
    IF              reduce using rule 32 (catchers -> catch .)
    TRY             reduce using rule 32 (catchers -> catch .)
    FOR             reduce using rule 32 (catchers -> catch .)
    RAISE           reduce using rule 32 (catchers -> catch .)
    RETURN          reduce using rule 32 (catchers -> catch .)
    NOT             reduce using rule 32 (catchers -> catch .)
    MINUS           reduce using rule 32 (catchers -> catch .)
    NEW             reduce using rule 32 (catchers -> catch .)
    LPAREN          reduce using rule 32 (catchers -> catch .)
    NUMBER          reduce using rule 32 (catchers -> catch .)
    TRUE            reduce using rule 32 (catchers -> catch .)
    FALSE           reduce using rule 32 (catchers -> catch .)
    NIL             reduce using rule 32 (catchers -> catch .)
    STRING          reduce using rule 32 (catchers -> catch .)
    NAME            reduce using rule 32 (catchers -> catch .)


state 137

    (33) catch -> CATCH . STRING LBRACE statements RBRACE

    STRING          shift and go to state 141


state 138

    (34) statement -> FOR LPAREN assign SEMI expression . SEMI assign RPAREN LBRACE statements RBRACE
    (42) expression -> expression . EQ expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS expression
    (45) expression -> expression . NOT_EQ expression
    (46) expression -> expression . GREATER_EQ expression
    (47) expression -> expression . LESS_EQ expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . MULTIPLY expression
    (51) expression -> expression . DIVIDE expression
    (53) expression -> expression . OR expression
    (54) expression -> expression . AND expression

    SEMI            shift and go to state 142
    EQ              shift and go to state 71
    GREATER         shift and go to state 72
    LESS            shift and go to state 73
    NOT_EQ          shift and go to state 74
    GREATER_EQ      shift and go to state 75
    LESS_EQ         shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82


state 139

    (28) statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE
    (29) statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 143
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 43
    statement                      shift and go to state 65
    assign                         shift and go to state 40
    variable_w_dot                 shift and go to state 48

state 140

    (31) catchers -> catchers catch .

    CATCH           reduce using rule 31 (catchers -> catchers catch .)
    RBRACE          reduce using rule 31 (catchers -> catchers catch .)
    VAR             reduce using rule 31 (catchers -> catchers catch .)
    IF              reduce using rule 31 (catchers -> catchers catch .)
    TRY             reduce using rule 31 (catchers -> catchers catch .)
    FOR             reduce using rule 31 (catchers -> catchers catch .)
    RAISE           reduce using rule 31 (catchers -> catchers catch .)
    RETURN          reduce using rule 31 (catchers -> catchers catch .)
    NOT             reduce using rule 31 (catchers -> catchers catch .)
    MINUS           reduce using rule 31 (catchers -> catchers catch .)
    NEW             reduce using rule 31 (catchers -> catchers catch .)
    LPAREN          reduce using rule 31 (catchers -> catchers catch .)
    NUMBER          reduce using rule 31 (catchers -> catchers catch .)
    TRUE            reduce using rule 31 (catchers -> catchers catch .)
    FALSE           reduce using rule 31 (catchers -> catchers catch .)
    NIL             reduce using rule 31 (catchers -> catchers catch .)
    STRING          reduce using rule 31 (catchers -> catchers catch .)
    NAME            reduce using rule 31 (catchers -> catchers catch .)


state 141

    (33) catch -> CATCH STRING . LBRACE statements RBRACE

    LBRACE          shift and go to state 144


state 142

    (34) statement -> FOR LPAREN assign SEMI expression SEMI . assign RPAREN LBRACE statements RBRACE
    (22) assign -> . variable_w_dot ASSIGN expression
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    NAME            shift and go to state 118

    assign                         shift and go to state 145
    variable_w_dot                 shift and go to state 117

state 143

    (28) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .
    (29) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    RBRACE          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    VAR             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RAISE           reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NEW             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NIL             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 146


state 144

    (33) catch -> CATCH STRING LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statements                     shift and go to state 147
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 145

    (34) statement -> FOR LPAREN assign SEMI expression SEMI assign . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 148


state 146

    (29) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 149


state 147

    (33) catch -> CATCH STRING LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 150
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    statement                      shift and go to state 65
    assign                         shift and go to state 40
    expression                     shift and go to state 43
    variable_w_dot                 shift and go to state 48

state 148

    (34) statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 151


state 149

    (29) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 43
    statements                     shift and go to state 152
    statement                      shift and go to state 39
    assign                         shift and go to state 40
    variable_w_dot                 shift and go to state 48

state 150

    (33) catch -> CATCH STRING LBRACE statements RBRACE .

    CATCH           reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    RBRACE          reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    VAR             reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    IF              reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    TRY             reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    FOR             reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    RAISE           reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    RETURN          reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    NOT             reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    MINUS           reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    NEW             reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    LPAREN          reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    NUMBER          reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    TRUE            reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    FALSE           reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    NIL             reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    STRING          reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)
    NAME            reduce using rule 33 (catch -> CATCH STRING LBRACE statements RBRACE .)


state 151

    (34) statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE . statements RBRACE
    (19) statements -> . statements statement
    (20) statements -> . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    assign                         shift and go to state 40
    expression                     shift and go to state 43
    statements                     shift and go to state 153
    statement                      shift and go to state 39
    variable_w_dot                 shift and go to state 48

state 152

    (29) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 154
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    expression                     shift and go to state 43
    statement                      shift and go to state 65
    assign                         shift and go to state 40
    variable_w_dot                 shift and go to state 48

state 153

    (34) statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements . RBRACE
    (19) statements -> statements . statement
    (21) statement -> . assign SEMI
    (23) statement -> . VAR variable COLON NAME SEMI
    (24) statement -> . VAR variable SEMI
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) statement -> . TRY LBRACE statements RBRACE catchers
    (34) statement -> . FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE
    (35) statement -> . RAISE expression SEMI
    (36) statement -> . expression SEMI
    (37) statement -> . RETURN expression SEMI
    (38) statement -> . RETURN SEMI
    (22) assign -> . variable_w_dot ASSIGN expression
    (39) expression -> . NOT expression
    (40) expression -> . MINUS expression
    (41) expression -> . NEW NAME
    (42) expression -> . expression EQ expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS expression
    (45) expression -> . expression NOT_EQ expression
    (46) expression -> . expression GREATER_EQ expression
    (47) expression -> . expression LESS_EQ expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression MULTIPLY expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . expression OR expression
    (54) expression -> . expression AND expression
    (55) expression -> . NUMBER
    (56) expression -> . TRUE
    (57) expression -> . FALSE
    (58) expression -> . NIL
    (59) expression -> . STRING
    (60) expression -> . variable_w_dot
    (61) expression -> . NAME LPAREN args RPAREN
    (62) expression -> . NAME LPAREN RPAREN
    (26) variable_w_dot -> . variable_w_dot DOT NAME
    (27) variable_w_dot -> . NAME

    RBRACE          shift and go to state 155
    VAR             shift and go to state 41
    IF              shift and go to state 42
    TRY             shift and go to state 44
    FOR             shift and go to state 45
    RAISE           shift and go to state 46
    RETURN          shift and go to state 47
    NOT             shift and go to state 49
    MINUS           shift and go to state 50
    NEW             shift and go to state 51
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NIL             shift and go to state 55
    STRING          shift and go to state 56
    NAME            shift and go to state 36

    assign                         shift and go to state 40
    expression                     shift and go to state 43
    statement                      shift and go to state 65
    variable_w_dot                 shift and go to state 48

state 154

    (29) statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    RBRACE          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    VAR             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    TRY             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RAISE           reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RETURN          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NOT             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    MINUS           reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NEW             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    TRUE            reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FALSE           reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NIL             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NAME            reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 155

    (34) statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .

    RBRACE          reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    VAR             reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    TRY             reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    RAISE           reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    NOT             reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    MINUS           reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    NEW             reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    TRUE            reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    FALSE           reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    NIL             reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)
    NAME            reduce using rule 34 (statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE .)

