
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftGREATER_EQGREATERLESS_EQLESSEQNOT_EQleftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSNOTAND ASSIGN CATCH COLON COMMA DIVIDE DOT ELSE EQ FALSE FOR FUNC GREATER GREATER_EQ IF LBRACE LESS LESS_EQ LPAREN MINUS MULTIPLY NAME NEW NIL NOT NOT_EQ NUMBER OR PLUS RAISE RBRACE RETURN RPAREN SEMI STRING STRUCT TRUE TRY VARprogram : structs funcs\n    | funcsstructs : structs struct\n    | structstruct : STRUCT NAME LBRACE fields RBRACEfields : fields field\n   | fieldfield : NAME COLON NAME SEMIfuncs : funcs func\n    | funcfunc : FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE\n    | FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACEfunc : FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE\n    | FUNC NAME LPAREN RPAREN LBRACE statements RBRACEformal_args : formal_args COMMA formal_arg\n    | formal_argformal_arg : NAME COLON NAME\n    | NAMEstatements : statements statement\n    | statementstatement : assign SEMIassign : variable_w_dot ASSIGN expressionstatement : VAR variable COLON NAME SEMI\n    | VAR variable SEMIvariable : NAMEvariable_w_dot : variable_w_dot DOT NAME\n    | NAMEstatement : IF LPAREN expression RPAREN LBRACE statements RBRACE\n    | IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    statement : TRY LBRACE statements RBRACE catcherscatchers : catchers catch\n    | catchcatch : CATCH STRING LBRACE statements RBRACEstatement : FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACEstatement : RAISE expression SEMIstatement : expression SEMIstatement : RETURN expression SEMI\n    | RETURN SEMIexpression : NOT expressionexpression : MINUS expression %prec UMINUSexpression : NEW NAMEexpression : expression EQ expression\n    | expression GREATER expression\n    | expression LESS expression\n    | expression NOT_EQ expression\n    | expression GREATER_EQ expression\n    | expression LESS_EQ expression\n    | expression PLUS expression\n    | expression MINUS expression\n    | expression MULTIPLY expression\n    | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : expression OR expression\n    | expression AND expressionexpression : NUMBERexpression : TRUE\n    | FALSEexpression : NILexpression : STRINGexpression : variable_w_dotexpression : NAME LPAREN args RPAREN\n    | NAME LPAREN RPARENargs : args COMMA expression\n    | expression'
    
_lr_action_items = {'STRUCT':([0,2,4,9,23,],[6,6,-4,-3,-5,]),'FUNC':([0,2,3,4,5,8,9,10,23,64,94,124,131,],[7,7,7,-4,-10,7,-3,-9,-5,-14,-13,-12,-11,]),'$end':([1,3,5,8,10,64,94,124,131,],[0,-2,-10,-1,-9,-14,-13,-12,-11,]),'NAME':([6,7,13,14,16,17,22,24,25,27,28,29,32,33,37,38,39,41,46,47,49,50,51,57,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,93,95,100,101,115,119,120,123,126,130,133,134,135,136,139,140,142,143,144,147,149,150,151,152,153,154,155,],[11,12,15,18,15,-7,30,-6,31,18,35,36,58,36,36,36,-20,68,36,36,36,36,92,-8,36,36,36,-19,-21,36,-36,36,36,36,36,36,36,36,36,36,36,36,36,36,118,-38,36,122,36,36,127,-24,36,-35,-37,36,36,36,-23,36,-30,-32,36,-31,118,-28,36,36,36,-33,36,36,36,-29,-34,]),'LBRACE':([11,20,26,35,44,58,128,141,146,148,],[13,29,33,60,83,93,134,144,149,151,]),'LPAREN':([12,29,33,36,37,38,39,42,45,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[14,37,37,61,37,37,-20,69,84,37,37,37,37,37,37,37,-19,-21,37,-36,37,37,37,37,37,37,37,37,37,37,37,37,37,-38,37,37,37,-24,37,-35,-37,37,37,37,-23,37,-30,-32,37,-31,-28,37,37,37,-33,37,37,37,-29,-34,]),'RPAREN':([14,18,19,21,31,34,36,52,53,54,55,56,61,62,63,90,91,92,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,145,],[20,-18,26,-16,-17,-15,-27,-55,-56,-57,-58,-59,97,99,-60,-39,-40,-41,125,-62,-64,-52,128,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-54,-22,-26,-61,-63,148,]),'COLON':([15,18,20,26,67,68,],[22,25,28,32,100,-25,]),'RBRACE':([16,17,24,38,39,57,59,65,66,70,87,95,101,115,119,120,123,133,135,136,139,140,143,147,150,152,153,154,155,],[23,-7,-6,64,-20,-8,94,-19,-21,-36,-38,124,-24,129,-35,-37,131,-23,-30,-32,143,-31,-28,150,-33,154,155,-29,-34,]),'COMMA':([18,19,21,31,34,36,52,53,54,55,56,63,90,91,92,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,122,125,132,],[-18,27,-16,-17,-15,-27,-55,-56,-57,-58,-59,-60,-39,-40,-41,126,-62,-64,-52,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-54,-26,-61,-63,]),'VAR':([29,33,38,39,59,60,65,66,70,83,87,93,95,101,115,119,120,123,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[41,41,41,-20,41,41,-19,-21,-36,41,-38,41,41,-24,41,-35,-37,41,-23,41,-30,-32,41,-31,-28,41,41,41,-33,41,41,41,-29,-34,]),'IF':([29,33,38,39,59,60,65,66,70,83,87,93,95,101,115,119,120,123,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[42,42,42,-20,42,42,-19,-21,-36,42,-38,42,42,-24,42,-35,-37,42,-23,42,-30,-32,42,-31,-28,42,42,42,-33,42,42,42,-29,-34,]),'TRY':([29,33,38,39,59,60,65,66,70,83,87,93,95,101,115,119,120,123,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[44,44,44,-20,44,44,-19,-21,-36,44,-38,44,44,-24,44,-35,-37,44,-23,44,-30,-32,44,-31,-28,44,44,44,-33,44,44,44,-29,-34,]),'FOR':([29,33,38,39,59,60,65,66,70,83,87,93,95,101,115,119,120,123,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[45,45,45,-20,45,45,-19,-21,-36,45,-38,45,45,-24,45,-35,-37,45,-23,45,-30,-32,45,-31,-28,45,45,45,-33,45,45,45,-29,-34,]),'RAISE':([29,33,38,39,59,60,65,66,70,83,87,93,95,101,115,119,120,123,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[46,46,46,-20,46,46,-19,-21,-36,46,-38,46,46,-24,46,-35,-37,46,-23,46,-30,-32,46,-31,-28,46,46,46,-33,46,46,46,-29,-34,]),'RETURN':([29,33,38,39,59,60,65,66,70,83,87,93,95,101,115,119,120,123,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[47,47,47,-20,47,47,-19,-21,-36,47,-38,47,47,-24,47,-35,-37,47,-23,47,-30,-32,47,-31,-28,47,47,47,-33,47,47,47,-29,-34,]),'NOT':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[49,49,49,49,-20,49,49,49,49,49,49,49,-19,-21,49,-36,49,49,49,49,49,49,49,49,49,49,49,49,49,-38,49,49,49,-24,49,-35,-37,49,49,49,-23,49,-30,-32,49,-31,-28,49,49,49,-33,49,49,49,-29,-34,]),'MINUS':([29,33,36,37,38,39,43,46,47,48,49,50,52,53,54,55,56,59,60,61,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,90,91,92,93,95,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,120,121,122,123,125,126,130,132,133,134,135,136,138,139,140,143,144,147,149,150,151,152,153,154,155,],[50,50,-27,50,50,-20,78,50,50,-60,50,50,-55,-56,-57,-58,-59,50,50,50,78,-60,-19,-21,50,-36,50,50,50,50,50,50,50,50,50,50,50,50,50,78,78,-38,50,-39,-40,-41,50,50,-62,78,-52,-24,78,78,78,78,78,78,78,-48,-49,-50,-51,78,78,50,-35,-37,78,-26,50,-61,50,50,78,-23,50,-30,-32,78,50,-31,-28,50,50,50,-33,50,50,50,-29,-34,]),'NEW':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[51,51,51,51,-20,51,51,51,51,51,51,51,-19,-21,51,-36,51,51,51,51,51,51,51,51,51,51,51,51,51,-38,51,51,51,-24,51,-35,-37,51,51,51,-23,51,-30,-32,51,-31,-28,51,51,51,-33,51,51,51,-29,-34,]),'NUMBER':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[52,52,52,52,-20,52,52,52,52,52,52,52,-19,-21,52,-36,52,52,52,52,52,52,52,52,52,52,52,52,52,-38,52,52,52,-24,52,-35,-37,52,52,52,-23,52,-30,-32,52,-31,-28,52,52,52,-33,52,52,52,-29,-34,]),'TRUE':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[53,53,53,53,-20,53,53,53,53,53,53,53,-19,-21,53,-36,53,53,53,53,53,53,53,53,53,53,53,53,53,-38,53,53,53,-24,53,-35,-37,53,53,53,-23,53,-30,-32,53,-31,-28,53,53,53,-33,53,53,53,-29,-34,]),'FALSE':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[54,54,54,54,-20,54,54,54,54,54,54,54,-19,-21,54,-36,54,54,54,54,54,54,54,54,54,54,54,54,54,-38,54,54,54,-24,54,-35,-37,54,54,54,-23,54,-30,-32,54,-31,-28,54,54,54,-33,54,54,54,-29,-34,]),'NIL':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,139,140,143,144,147,149,150,151,152,153,154,155,],[55,55,55,55,-20,55,55,55,55,55,55,55,-19,-21,55,-36,55,55,55,55,55,55,55,55,55,55,55,55,55,-38,55,55,55,-24,55,-35,-37,55,55,55,-23,55,-30,-32,55,-31,-28,55,55,55,-33,55,55,55,-29,-34,]),'STRING':([29,33,37,38,39,46,47,49,50,59,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,93,95,101,115,119,120,123,126,130,133,134,135,136,137,139,140,143,144,147,149,150,151,152,153,154,155,],[56,56,56,56,-20,56,56,56,56,56,56,56,-19,-21,56,-36,56,56,56,56,56,56,56,56,56,56,56,56,56,-38,56,56,56,-24,56,-35,-37,56,56,56,-23,56,-30,-32,141,56,-31,-28,56,56,56,-33,56,56,56,-29,-34,]),'SEMI':([30,36,40,43,47,48,52,53,54,55,56,63,67,68,85,86,90,91,92,97,99,103,104,105,106,107,108,109,110,111,112,113,114,116,121,122,125,127,138,],[57,-27,66,70,87,-60,-55,-56,-57,-58,-59,-60,101,-25,119,120,-39,-40,-41,-62,-52,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-54,130,-22,-26,-61,133,142,]),'ASSIGN':([36,48,117,118,122,],[-27,88,88,-27,-26,]),'DOT':([36,48,63,117,118,122,],[-27,89,89,89,-27,-26,]),'EQ':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,71,-60,-55,-56,-57,-58,-59,71,-60,71,71,-39,-40,-41,-62,71,-52,71,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,71,71,71,-26,-61,71,71,]),'GREATER':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,72,-60,-55,-56,-57,-58,-59,72,-60,72,72,-39,-40,-41,-62,72,-52,72,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,72,72,72,-26,-61,72,72,]),'LESS':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,73,-60,-55,-56,-57,-58,-59,73,-60,73,73,-39,-40,-41,-62,73,-52,73,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,73,73,73,-26,-61,73,73,]),'NOT_EQ':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,74,-60,-55,-56,-57,-58,-59,74,-60,74,74,-39,-40,-41,-62,74,-52,74,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,74,74,74,-26,-61,74,74,]),'GREATER_EQ':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,75,-60,-55,-56,-57,-58,-59,75,-60,75,75,-39,-40,-41,-62,75,-52,75,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,75,75,75,-26,-61,75,75,]),'LESS_EQ':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,76,-60,-55,-56,-57,-58,-59,76,-60,76,76,-39,-40,-41,-62,76,-52,76,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,76,76,76,-26,-61,76,76,]),'PLUS':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,77,-60,-55,-56,-57,-58,-59,77,-60,77,77,-39,-40,-41,-62,77,-52,77,77,77,77,77,77,77,-48,-49,-50,-51,77,77,77,-26,-61,77,77,]),'MULTIPLY':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,79,-60,-55,-56,-57,-58,-59,79,-60,79,79,-39,-40,-41,-62,79,-52,79,79,79,79,79,79,79,79,79,-50,-51,79,79,79,-26,-61,79,79,]),'DIVIDE':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,80,-60,-55,-56,-57,-58,-59,80,-60,80,80,-39,-40,-41,-62,80,-52,80,80,80,80,80,80,80,80,80,-50,-51,80,80,80,-26,-61,80,80,]),'OR':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,81,-60,-55,-56,-57,-58,-59,81,-60,81,81,-39,-40,-41,-62,81,-52,81,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-54,81,-26,-61,81,81,]),'AND':([36,43,48,52,53,54,55,56,62,63,85,86,90,91,92,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,121,122,125,132,138,],[-27,82,-60,-55,-56,-57,-58,-59,82,-60,82,82,-39,-40,-41,-62,82,-52,82,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,82,-54,82,-26,-61,82,82,]),'CATCH':([129,135,136,140,150,],[137,137,-32,-31,-33,]),'ELSE':([143,],[146,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'structs':([0,],[2,]),'funcs':([0,2,],[3,8,]),'struct':([0,2,],[4,9,]),'func':([0,2,3,8,],[5,5,10,10,]),'fields':([13,],[16,]),'field':([13,16,],[17,24,]),'formal_args':([14,],[19,]),'formal_arg':([14,27,],[21,34,]),'statements':([29,33,60,83,93,134,144,149,151,],[38,59,95,115,123,139,147,152,153,]),'statement':([29,33,38,59,60,83,93,95,115,123,134,139,144,147,149,151,152,153,],[39,39,65,65,39,39,39,65,65,65,39,65,39,65,39,39,65,65,]),'assign':([29,33,38,59,60,83,84,93,95,115,123,134,139,142,144,147,149,151,152,153,],[40,40,40,40,40,40,116,40,40,40,40,40,40,145,40,40,40,40,40,40,]),'expression':([29,33,37,38,46,47,49,50,59,60,61,69,71,72,73,74,75,76,77,78,79,80,81,82,83,88,93,95,115,123,126,130,134,139,144,147,149,151,152,153,],[43,43,62,43,85,86,90,91,43,43,98,102,103,104,105,106,107,108,109,110,111,112,113,114,43,121,43,43,43,43,132,138,43,43,43,43,43,43,43,43,]),'variable_w_dot':([29,33,37,38,46,47,49,50,59,60,61,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,93,95,115,123,126,130,134,139,142,144,147,149,151,152,153,],[48,48,63,48,63,63,63,63,48,48,63,63,63,63,63,63,63,63,63,63,63,63,63,63,48,117,63,48,48,48,48,63,63,48,48,117,48,48,48,48,48,48,]),'variable':([41,],[67,]),'args':([61,],[96,]),'catchers':([129,],[135,]),'catch':([129,135,],[136,140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> structs funcs','program',2,'p_program','brewparse.py',26),
  ('program -> funcs','program',1,'p_program','brewparse.py',27),
  ('structs -> structs struct','structs',2,'p_structs','brewparse.py',34),
  ('structs -> struct','structs',1,'p_structs','brewparse.py',35),
  ('struct -> STRUCT NAME LBRACE fields RBRACE','struct',5,'p_struct','brewparse.py',39),
  ('fields -> fields field','fields',2,'p_fields','brewparse.py',43),
  ('fields -> field','fields',1,'p_fields','brewparse.py',44),
  ('field -> NAME COLON NAME SEMI','field',4,'p_field','brewparse.py',48),
  ('funcs -> funcs func','funcs',2,'p_funcs','brewparse.py',52),
  ('funcs -> func','funcs',1,'p_funcs','brewparse.py',53),
  ('func -> FUNC NAME LPAREN formal_args RPAREN COLON NAME LBRACE statements RBRACE','func',10,'p_func','brewparse.py',58),
  ('func -> FUNC NAME LPAREN RPAREN COLON NAME LBRACE statements RBRACE','func',9,'p_func','brewparse.py',59),
  ('func -> FUNC NAME LPAREN formal_args RPAREN LBRACE statements RBRACE','func',8,'p_func2','brewparse.py',66),
  ('func -> FUNC NAME LPAREN RPAREN LBRACE statements RBRACE','func',7,'p_func2','brewparse.py',67),
  ('formal_args -> formal_args COMMA formal_arg','formal_args',3,'p_formal_args','brewparse.py',74),
  ('formal_args -> formal_arg','formal_args',1,'p_formal_args','brewparse.py',75),
  ('formal_arg -> NAME COLON NAME','formal_arg',3,'p_formal_arg','brewparse.py',80),
  ('formal_arg -> NAME','formal_arg',1,'p_formal_arg','brewparse.py',81),
  ('statements -> statements statement','statements',2,'p_statements','brewparse.py',88),
  ('statements -> statement','statements',1,'p_statements','brewparse.py',89),
  ('statement -> assign SEMI','statement',2,'p_statement___assign','brewparse.py',94),
  ('assign -> variable_w_dot ASSIGN expression','assign',3,'p_assign','brewparse.py',98),
  ('statement -> VAR variable COLON NAME SEMI','statement',5,'p_statement___var','brewparse.py',102),
  ('statement -> VAR variable SEMI','statement',3,'p_statement___var','brewparse.py',103),
  ('variable -> NAME','variable',1,'p_variable','brewparse.py',110),
  ('variable_w_dot -> variable_w_dot DOT NAME','variable_w_dot',3,'p_variable_w_dot','brewparse.py',114),
  ('variable_w_dot -> NAME','variable_w_dot',1,'p_variable_w_dot','brewparse.py',115),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_statement_if','brewparse.py',122),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','statement',11,'p_statement_if','brewparse.py',123),
  ('statement -> TRY LBRACE statements RBRACE catchers','statement',5,'p_statement_try','brewparse.py',141),
  ('catchers -> catchers catch','catchers',2,'p_catches','brewparse.py',145),
  ('catchers -> catch','catchers',1,'p_catches','brewparse.py',146),
  ('catch -> CATCH STRING LBRACE statements RBRACE','catch',5,'p_catch','brewparse.py',150),
  ('statement -> FOR LPAREN assign SEMI expression SEMI assign RPAREN LBRACE statements RBRACE','statement',11,'p_statement_for','brewparse.py',154),
  ('statement -> RAISE expression SEMI','statement',3,'p_statement_raise','brewparse.py',158),
  ('statement -> expression SEMI','statement',2,'p_statement_expr','brewparse.py',162),
  ('statement -> RETURN expression SEMI','statement',3,'p_statement_return','brewparse.py',167),
  ('statement -> RETURN SEMI','statement',2,'p_statement_return','brewparse.py',168),
  ('expression -> NOT expression','expression',2,'p_expression_not','brewparse.py',177),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','brewparse.py',182),
  ('expression -> NEW NAME','expression',2,'p_expression_new','brewparse.py',186),
  ('expression -> expression EQ expression','expression',3,'p_arith_expression_binop','brewparse.py',191),
  ('expression -> expression GREATER expression','expression',3,'p_arith_expression_binop','brewparse.py',192),
  ('expression -> expression LESS expression','expression',3,'p_arith_expression_binop','brewparse.py',193),
  ('expression -> expression NOT_EQ expression','expression',3,'p_arith_expression_binop','brewparse.py',194),
  ('expression -> expression GREATER_EQ expression','expression',3,'p_arith_expression_binop','brewparse.py',195),
  ('expression -> expression LESS_EQ expression','expression',3,'p_arith_expression_binop','brewparse.py',196),
  ('expression -> expression PLUS expression','expression',3,'p_arith_expression_binop','brewparse.py',197),
  ('expression -> expression MINUS expression','expression',3,'p_arith_expression_binop','brewparse.py',198),
  ('expression -> expression MULTIPLY expression','expression',3,'p_arith_expression_binop','brewparse.py',199),
  ('expression -> expression DIVIDE expression','expression',3,'p_arith_expression_binop','brewparse.py',200),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','brewparse.py',205),
  ('expression -> expression OR expression','expression',3,'p_expression_and_or','brewparse.py',210),
  ('expression -> expression AND expression','expression',3,'p_expression_and_or','brewparse.py',211),
  ('expression -> NUMBER','expression',1,'p_expression_number','brewparse.py',216),
  ('expression -> TRUE','expression',1,'p_expression_bool','brewparse.py',221),
  ('expression -> FALSE','expression',1,'p_expression_bool','brewparse.py',222),
  ('expression -> NIL','expression',1,'p_expression_nil','brewparse.py',228),
  ('expression -> STRING','expression',1,'p_expression_string','brewparse.py',233),
  ('expression -> variable_w_dot','expression',1,'p_expression_variable','brewparse.py',238),
  ('expression -> NAME LPAREN args RPAREN','expression',4,'p_func_call','brewparse.py',243),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_func_call','brewparse.py',244),
  ('args -> args COMMA expression','args',3,'p_expression_args','brewparse.py',252),
  ('args -> expression','args',1,'p_expression_args','brewparse.py',253),
]
